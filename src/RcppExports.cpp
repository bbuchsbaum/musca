// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// linear_sim_embed_cpp
Rcpp::List linear_sim_embed_cpp(const arma::mat& X, const arma::mat& T, const arma::mat& M, double sigma_P, int ncomp, double alpha_p, int maxit, double tol, double batch_size);
RcppExport SEXP _musca_linear_sim_embed_cpp(SEXP XSEXP, SEXP TSEXP, SEXP MSEXP, SEXP sigma_PSEXP, SEXP ncompSEXP, SEXP alpha_pSEXP, SEXP maxitSEXP, SEXP tolSEXP, SEXP batch_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type T(TSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_P(sigma_PSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_p(alpha_pSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< double >::type batch_size(batch_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(linear_sim_embed_cpp(X, T, M, sigma_P, ncomp, alpha_p, maxit, tol, batch_size));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_musca_linear_sim_embed_cpp", (DL_FUNC) &_musca_linear_sim_embed_cpp, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_musca(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
